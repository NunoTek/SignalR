<h1>Home</h1>

<div class="publisher">

    <h2>Publisher</h2>
    <input type="text" id="reportName" placeholder="Enter report name" />
    <input type="button" id="publishReport" value="Publish" />
</div>

<div class="reports">

    <h2>Reports</h2>
    <ul id="reports"></ul>
</div>

@section scripts {
    <!-- Including CryptoJS required libraries -->
    <script src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/hmac-sha256.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64-min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@aspnet/signalr@1.0.3/dist/cjs/index.min.js"></script>

    <script>
        $(function () {

            let hubUrl = 'http://localhost:5000/reportsPublisher';
            let httpConnection = new signalR.HttpConnection(hubUrl);
            let hubConnection = new signalR.HubConnection(httpConnection);

            var token = "";
            var userName = prompt("Please enter your name", "HarryPytter6");

            // Defining our token parts
            var header = {
                "alg": "HS256",
                "typ": "JWT"
            };

            var data = {
                "username": userName,
                "roles": [""]
            };

            var secret = "My very confidential secret!!!";

            function base64url(source) {
                // Encode in classical base64
                encodedSource = CryptoJS.enc.Base64.stringify(source);

                // Remove padding equal characters
                encodedSource = encodedSource.replace(/=+$/, '');

                // Replace characters according to base64url specifications
                encodedSource = encodedSource.replace(/\+/g, '-');
                encodedSource = encodedSource.replace(/\//g, '_');

                return encodedSource;
            }

            var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));
            var encodedHeader = base64url(stringifiedHeader);

            var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data));
            var encodedData = base64url(stringifiedData);

            var signature = encodedHeader + "." + encodedData;
            signature = CryptoJS.HmacSHA256(signature, secret);
            signature = base64url(signature);

            token = `${encodedHeader}.${encodedData}.${signature}`;

            $("#reportName").keyup(function (event) {
                if (event.keyCode === 13) { // enter key
                    $("#publishReport").click();
                }
            });

            $("#publishReport").click(function () {

                // Get Message / UserName / Date
                var date = getDateShort();
                var msg = $('#reportName').val();
                var packet = {
                    Header: {
                        Item1: 0,
                        Item2: 0,
                        Item3: 0
                    },
                    Content: msg,
                    DateTime: new Date()
                }

                // Send to Hub
                hubConnection.invoke('ClientToAll', packet);

                $("#reportName").val("");
            });

            hubConnection.on('OnClientRequest', (senderId, data) => {
                // Write result
                $('#reports').append($('<li>').text(data));
            });

            hubConnection.on('Login', () => {
                // Authentificate
                hubConnection.invoke('Authentificate', token);
            });

            hubConnection.start();

            function getDateShort() {
                var date = new Date();
                return (date.getDate() +
                    "/" + date.getMonth() +
                    "/" + date.getFullYear() +
                    " " + date.getHours() +
                    ":" + date.getMinutes() +
                    ":" + date.getSeconds());
            }

        });
    </script>
}